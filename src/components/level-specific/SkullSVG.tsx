import React, { useState } from 'react';

const SkullSVG = ({ onBoneClick }: { onBoneClick: (bone: string) => void }) => {
  const [selectedBone, setSelectedBone] = useState<string | null>(null);

  const handleBoneClick = (bone: string) => {
    setSelectedBone(bone);
    onBoneClick(bone);
    console.log(`Clicked on: ${bone}`);
  };

  const getBoneClass = (bone: string) => {
    return `bone-region ${selectedBone === bone ? 'selected' : ''}`;
  };

  return (
    <div style={{ textAlign: 'center' }}>
      <svg
        version="1.1"
        id="Layer_1"
        xmlns="http://www.w3.org/2000/svg"
        width="739.849"
        height="183.316"
        viewBox="0 0 739.849 183.316"
        enableBackground="new 0 0 739.849 183.316"
        xmlSpace="preserve"
        style={{ width: '90%', height: 'auto', margin: '0 auto' }}
      >
        <style>
          {`
            .bone-region {
              cursor: pointer;
              transition: fill 0.3s ease;
            }
            .bone-region:hover {
              fill: #a2d5f2; /* Light blue on hover */
            }
            .selected {
              fill: #f2a2a2; /* Light red when selected */
            }
          `}
        </style>
        <rect fill="#FFFFFF" width="739.849" height="183.316" />

        {/* Frontal Bone */}
        <g id="frontal-bone" className={getBoneClass('Frontal')} onClick={() => handleBoneClick('Frontal')}>
            <title>Frontal Bone</title>
            <path fill="#EBBBD7" stroke="#967348" strokeWidth="0.2504" d="M49.398,99.569c-6.069,1.04-1.763-9.098-1.868-11.435 c-0.117-2.588-1.809-4.851-2.106-7.343c-0.254-2.129,0.09-4.075-0.59-6.224c1.756-0.457,3.504-5.451,3.975-7.099 c1.067,0.028,1.38-1.136,1.899-1.889c0.824,0.41,0.952-0.524,1.611-0.411c0.67,0.115,0.924,0.75,1.461,0.97 c1.249,0.514,2.254,0.191,3.72,0.291c0.336,0.753,1.406,0.548,1.715,1.414c0.267,0.75-0.478,1.267-0.527,1.937 c-0.047,0.64,0.31,1.175,0.345,1.81c0.077,1.401-0.375,2.655-0.711,3.997c-0.651,2.609-0.225,4.033,0.313,6.604 c0.475,2.275-0.354,4.616-0.794,6.832c-0.432,2.18,0.063,1.86,0.664,3.787c0.313,1,0.313,1.106,0.25,2.279 c-0.032,0.585,0.121,2.367-0.247,2.799c-0.453,0.533-3.53,0.899-4.463,1.188c-1.628,0.505-3.533,1.056-5.258,0.942 c-0.241-0.076-0.246-0.225-0.015-0.449"/>
        </g>

        {/* Parietal Bone */}
        <g id="parietal-bone" className={getBoneClass('Parietal')} onClick={() => handleBoneClick('Parietal')}>
            <title>Parietal Bone</title>
            <path fill="#B5D0ED" stroke="#000000" strokeWidth="0.2504" d="M55.551,66.079c-0.708-2.047,1.822-6.002,2.365-7.34 c0.818-2.018,0.675-4.186,1.556-6.092c0.86-1.863,2.5-3.576,2.565-5.619c0.047-1.474-1.091-2.734-1.063-4.142 c0.024-1.252,1.142-3.205,1.909-4.176c1.443-1.826,3.293-3.007,3.328-5.901c0.014-1.117-0.585-2.477-0.17-3.551 c0.297-0.769,0.905-0.803,1.27-1.436c0.481-0.834,0.192-1.689,0.551-2.481c1.669-3.688,7.847-4.399,11.276-5.034 c1.878-0.348,3.768-0.573,5.668-0.77c1.588-0.164,3.223,0.527,4.87,0.534c1.936,0.007,3.864-0.262,5.801-0.229 c8.856,0.149,17.604,2.702,25.775,5.963c7.687,3.068,13.738,10.501,18.447,17.077c3.225,4.503,4.853,9.038,6.122,14.344 c1.257,5.261,1.559,10.833,3.816,15.816c-0.075,0.076-0.148,0.153-0.22,0.232c-0.177-0.065-0.371-0.111-0.557-0.163 c0.028,0.657,0.263,1.38,0.369,2.009c-0.398-0.366-0.844-0.522-1.192-0.913c-0.058,1.159,2.269,2.695,0.37,3.406 c-0.193-0.748-0.438-0.618-0.794-0.943c0.071,1.044-0.799,2.434,0.095,3.148c-0.218,0.815-0.953,0.988-0.923,1.67 c0.038,0.864,0.914,1.166,1.136,2.008c-0.724,0.158-1.19-0.518-1.543-0.984c-0.75,1.129,1.079,2.536,0.38,3.712 c-0.626-0.255-0.881-0.999-1.096-1.621c-0.209-0.013-0.969,0.122-1.178,0.208c-0.102,0.742,0.177,1.448,0.777,1.892 c-0.053,0.166-0.129,0.334-0.185,0.507c-0.471-0.635-0.609-0.322-1.218-0.521c0.023,0.914-0.668,1.007-0.872,1.842 c-0.196,0.802-0.012,1.558,0.17,2.284c-0.408-0.389-1.782-2.738-2-1.657c-0.298,1.478,1.787,2.393,1.386,3.936 c-1.826,0.449-1.051-3.316-2.863-2.857c0.354,0.969,0.633,2.283,0.192,3.243c-0.604-0.762-1.43-2.23-1.642-0.515 c-0.138,1.111,1.08,2.112,0.384,3.447c-0.405-0.839-0.696-1.933-1.204-2.637c-0.694,1.334,0.043,3.149-0.471,4.568 c-0.912,2.523-0.939-0.009-2.471,0.032c-0.01,1.32-0.254,2.262-1.117,3.077c-0.6-0.215-1.072-0.628-1.397-1.172 c0.709-0.309,0.639-0.52,0.782-1.082c-0.187,0.057-0.355,0.144-0.552,0.158c-0.06-0.839-0.748-1.257-1.68-0.98 c0.005,0.232-0.089,0.542-0.063,0.771c-0.75,0.079-1.318-0.57-1.81-0.989c-0.45,1.302,1.905,1.166,0.97,2.868 c-0.934,0.476-1.752-0.189-2.648,0.214c0.108-0.217,0.178-0.545,0.375-0.776c-0.451,0.158-1.241,0.698-1.862,0.603 c-0.954-0.146-0.417-1.474-1.638-0.865c-0.199-2.771,0.537-4.313-2.697-4.348c-1.896-0.021-4.45,1.026-6.276,0.425 c0.014,0.68-0.364,1.105-1.047,1.209c0.114-0.864,0.746-2.051-0.027-2.721c-0.582,0.645-0.113,1.993-0.599,2.492 c-0.778,0.797-2.095-0.419-2.369,1.068c-0.352-0.338-0.674-0.678-0.822-1.2c-0.041-0.142-1.409,0.075-1.56,0.104 c0.435-1.008-0.79-1.474-1.181-2.361c-0.826-1.871-0.359-4.515-0.81-6.549c-0.496-2.241-1.82-4.105-2.413-6.251 c-0.286-1.034,0.417-2.712-0.001-3.39c-0.493-0.802-0.659-0.085-1.141-0.408c-0.613-0.411-0.563-0.264-1.043-0.794 c-0.652-0.721-0.859-1.936-1.617-2.68c-0.167-0.164-0.842-0.242-1.105-0.445c-0.328-0.252-0.608-0.804-0.987-1.104 c-0.495-0.394-1.28-0.424-1.636-0.981c-0.215-0.337,0.163-0.943-0.028-1.262c-0.542-0.908-1.116-1.015-2.178-1.399 c-5.054-1.829-10.652-3.659-15.99-4.218c-2.719-0.285-4.331,0.313-6.865,1.188c-2.897,1-5.193,2.105-8.263,2.816 c-1.167,0.27-3.031,1.622-4.026,0.526c-0.5-0.552-0.053-1.794-0.866-2.466c-0.677-0.561-1.664-0.153-2.248-0.658 C55.801,66.598,55.646,66.356,55.551,66.079z"/>
        </g>

        {/* Occipital Bone */}
        <g id="occipital-bone" className={getBoneClass('Occipital')} onClick={() => handleBoneClick('Occipital')}>
            <title>Occipital Bone</title>
            <path fill="#6CB783" stroke="#967348" strokeWidth="0.2504" d="M122.216,124.399c-2.225,0.407-5.331,1.389-7.287,2.521 c-3.026,1.751-5.46,0.118-8.715-0.431c-3.347-0.563-7.787-0.807-11.1-0.218c-1.758,0.313-2.096,1.645-3.553,2.363 c-1.787,0.879-3.638,0.086-5.33-0.497c-1.79-0.616-3.741-0.923-5.52-1.693c-1.003-0.435-1.712-1.108-1.888-2.243 c-0.197-1.27,0.653-1.502,0.839-2.297c0.481-2.058-0.696-3.065-1.517-4.74c-0.571-1.169-0.318-1.67,0.271-2.77 c1.167-2.179,1.787-4.863,3.714-6.243c0.18,2.505-0.824,6.91,1.085,8.695c1.905,1.781,5.326,0.772,7.679,0.918 c0.854,2.071,1.502,4.303,2.148,6.401c3.729,0.973,8.991-1.015,12.299-2.671c2.738-1.371,5.434-3.701,7.502-5.838 c1.583-1.638,2.088-3.99,3.964-5.439c1.244-0.96,2.563-1.864,3.458-3.185c0.907-1.338,1.078-2.903,1.77-4.315 c1.445-2.946,5.068-1.871,7.494-3.764c0.729-0.568,1.141-1.614,2.078-1.74c0.692-0.093,1.458,0.636,2.306,0.488 c1.116-0.194,1.298-0.791,1.93-1.668c1.368-1.896,2.75-3.763,4.168-5.633c0.651-0.86,1.299-1.524,1.783-2.514 c0.322-0.657,0.378-1.757,0.706-2.285c0.645-1.036,1.957-1.693,2.645-2.758c0.672-1.04,1.201-2.379,1.652-3.552 c0.611-1.593,0.087-3.119,0.465-4.753c0.277-1.198,1.696-1.957,1.455-3.26c0.278,1.5,1.42,3.016,1.702,4.67 c0.472,2.771,0.816,5.454,1.375,8.218c0.948,4.686,0.447,9.527-0.977,14.063c-0.644,2.05-1.3,3.989-1.803,6.022 c-0.523,2.113-2.206,3.65-3.468,5.345c-0.919,1.233-1.659,2.546-2.661,3.709c-0.995,1.154-2.02,2.171-3.13,3.13 c-2.721,2.35-5.404,5.926-8.854,7.206C128.063,124.695,125.133,123.867,122.216,124.399z"/>
        </g>

        {/* Temporal Bone */}
        <g id="temporal-bone" className={getBoneClass('Temporal')} onClick={() => handleBoneClick('Temporal')}>
            <title>Temporal Bone</title>
            <path fill="#FBF4A1" stroke="#000000" strokeWidth="0.2504" d="M77.646,21.94c-0.095,0.464,3.084-2.284,2.925-2.238 c-3.084,0.877-6.746,0.879-9.938,1.282c-2.153,0.271-4.428,0.788-6.509,1.445c-12.4,3.911-22.109,11.751-30.942,21.2 c-1.432,1.531-2.773,2.938-3.531,4.846c-0.804,2.024-1.438,4.114-2.406,6.097c-2.46,5.045-6.688,10.286-4.907,16.275 c0.492,1.653,2.819,3.494,1.538,5.341c1.381,0.361,0.936,1.723,1.221,2.731c0.532,1.887,1.326,1.41,2.657,2.091 c1.458,0.749,2,1.9,3.369,2.781c-0.82-0.528,2.015-2.046,2.278-2.112c0.957-0.24,2.665-0.229,3.501,0.384 c1.92,1.411,0.936,4.686,0.823,6.655c-0.082,1.437-1.771,5.184-0.844,6.238c2.48-1.235,2.678-5.315,2.921-7.709 c0.192-1.886-0.25-3.809,0.104-5.691c0.162-0.86,0.345-1.805,1.086-2.367c0.439-0.333,3.113-0.414,2.939-0.122 c0.476-0.8,1.197-0.925,1.622,0.015c0.625-1.578-0.461-3.771,1.645-4.569c-0.592-1.53,0.01-1.381,0.442-2.248 c-0.019,0.039,0.617-1.147,0.455-1.052c0.01-0.006,1.459-0.486,1.213-0.18c0.305-0.379,0.827-5.489,2.661-2.973 c0.169-0.633-0.396-1.285,0.423-1.626c0.152,0.717,0.623,2.212,1.12,0.849c0.588-0.126,1.104,0.081,1.482,0.564 c2.255-0.84,0.964-2.225,1.806-4.105c0.077-0.173,0.89-0.127,1.021-0.49c0.159-0.439-0.224-1.112-0.182-1.633 c0.107-1.315,1.146-2.44,1.298-3.735c1.931,0.285,1.13-1.57,1.054-2.357c-0.146-1.503,0.09-2.009,0.829-3.486 c0.188,0.036,0.369,0.097,0.544,0.158c0.015,0.006,0.12-0.649,0.125-0.704c1.287-0.065,0.739-0.96,1.274-1.675 c0.515-0.688,1.365-1.02,1.829-1.753c0.653-1.031,0.477-2.733-1.069-2.546c0.014-0.235-0.077-0.537-0.063-0.772 c-0.609-0.026-1.11-0.296-1.408-0.812c0.695-0.249,1.268,0.04,2.048-0.084c-0.418-0.338-0.331-0.521-0.999-0.625 c0.161-1.234,1.085-0.137,1.851-0.43c0.969-0.37,0.733-1.387,1.851-1.455c0.021-0.787-0.752-1.087-1.349-1.262 c0.27-0.133,0.328-0.296,0.734-0.417c-0.35-0.096-0.834-0.575-1.173-0.798c0.819-0.398,1.065,0.498,1.826,0.432 c1.411-0.121,0.275-0.073,0.192-0.85c0.023,0.216-1.36-1.073,0.006-0.844c0.785,0.132,0.674,1.506,1.638,0.802 c0.002-0.162-0.133-0.163-0.158-0.323c0.725-0.099,1.335,0.143,2.05,0.125c-0.385-0.467-2.954-0.679-2.246-1.851 c0.525-0.87,2.206,1.172,2.856,1.247c-0.17-0.517-0.206-0.867-0.786-1.193c0.919,0.141,1.493,1.447,2.415,0.604 c-0.335-0.387-0.514-0.754-1-0.851c0.468-0.247,1.021-0.054,1.667-0.032c0.48-2.001-2.242-0.784-3.301-1.262 c0.422-0.964,1.951-0.556,2.883-0.615c0.036-1.521-1.559-0.357-2.443-0.419c0.087-1.48,2.013-0.289,2.709-1.219 c-0.63-0.798-1.874-0.114-2.71-0.032c0.182-0.787,1.032-0.674,1.819-0.625c0.102-1.981-3.508,0.699-4.275-0.752 c1.691-1.536,5.774,1.216,7.159-0.948c-0.848-0.26-1.881-0.113-2.789-0.184c0.36-0.209,0.721-0.611,1.114-0.808 c-0.906,0.026-2.386,0.37-2.986-0.198c0.93-0.84,3.076,0.239,3.473-1.058c-0.942-0.226-2.5,0.344-3.332-0.193 c1.011-0.569,2.466,0.594,3.308-0.366c-0.826-0.555-2.262-0.23-3.278-0.292c-0.084-1.848,2.535-0.984,3.284-1.794 c-0.997-0.655-2.193,0.099-3.3-0.084c0.551-1.55,2.753-0.883,2.941-2.228c1.126-0.076,0.673-1.036,1.415-1.298 C75.882,21.503,76.838,22.107,77.646,21.94z"/>
        </g>

        {/* Mandible */}
        <g id="mandible-bone" className={getBoneClass('Mandible')} onClick={() => handleBoneClick('Mandible')}>
            <title>Mandible</title>
            <path fill="#D1EEFC" stroke="#000000" strokeWidth="0.2504" d="M13.041,143.362c0.277,1.484,1.585,2.565,1.837,4.011 c0.619,3.54-2.063,6.407-2.249,9.76c-0.274,4.932,4.021,6.259,8.138,6.259c2.028,0,3.716-0.385,5.679-0.614 c1.964-0.229,3.906-0.029,5.796-0.22c1.842-0.188,3.467-1.15,5.265-1.308c1.706-0.149,3.454-0.475,5.168-0.575 c2.309-0.134,4.547-0.132,6.854-0.418c3.895-0.484,7.747-1.319,11.424-2.708c4.134-1.562,8.886-6.085,8.8-10.85 c-0.051-2.875,0.854-5.7,1.559-8.569c1.64-6.684,3.307-13.42,7.032-19.232c2.371-3.699,4.003-6.981,4.183-11.429 c0.171-4.23-5.999-5.672-7.77-1.873c-0.707,1.515,0.264,2.406,0.472,3.751c0.296,1.9-0.726,2.911-2.045,4.016 c-2.136,1.787-6.087,4.197-9.023,3.459c-1.157-0.291-2.168-1.607-2.865-2.462c-1.823-2.236-2.037-4.845-3.232-7.297 c-0.641-1.313-1.897-2.822-3.549-2.386c-1.694,0.447-2.138,2.754-2.405,4.252c-0.66,3.697-1.25,7.318-0.897,11.037 c0.312,3.291,0.456,6.581,0.608,9.882c0.089,1.948,0.288,3.607-1.257,5.05c-2.559,2.388-6.906,2.302-10.142,2.878 c-5.037,0.896-9.997,1.891-15.133,2.254c-1.904,0.134-3.634,0.401-5.536,0.247c-1.732-0.14-4.206-0.566-5.74,0.499 C13.021,141.463,12.811,142.125,13.041,143.362z"/>
        </g>
      </svg>
    </div>
  );
};

export default SkullSVG;
